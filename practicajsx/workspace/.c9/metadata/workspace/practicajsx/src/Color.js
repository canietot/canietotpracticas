{"filter":false,"title":"Color.js","tooltip":"/practicajsx/src/Color.js","undoManager":{"mark":0,"position":0,"stack":[[{"start":{"row":0,"column":0},"end":{"row":43,"column":21},"action":"insert","lines":["import React, {Component} from 'react';","","//este arreglo es JS normal","const colors=[\"#FF0033\",\"#43D51C\",\"#1C73D5\",\"#D4B487\",\"#920238\"];","","//Esta funcion flecha tambien lo es","const randomColor = () => {","    return colors[Math.floor(Math.random()*colors.length)+1];","}","/*","esta clase extiende Component, por lo que hace uso de JSX y React.","Sin embargo, interactua con la funcion definida previamente ","sin problema.","*/","class Color extends Component{","","    constructor(props){","        super(props);","        this.state={","            color:randomColor()","        }","        this.setNewColor = this.setNewColor.bind(this);","    }","    ","    setNewColor(){","        const newColor = randomColor();","        this.setState({","            color: newColor","        })","    }","        ","    render(){","        return(","            <div style={{backgroundColor:this.state.color}}>","                <button onClick = {this.setNewColor}>","                    Color al azar","                </button>","            </div>  ","        );","    }","}","/*En este archivo no renderizamos, solamente exportamos","el componente.*/","export default Color;"],"id":1}]]},"ace":{"folds":[],"scrolltop":180,"scrollleft":0,"selection":{"start":{"row":43,"column":21},"end":{"row":43,"column":21},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1559261764339,"hash":"2f7ecab3a47cb61c8a7405200954c42ec611ac0f"}